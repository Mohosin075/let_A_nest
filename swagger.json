{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "Generated API documentation"
  },
  "paths": {
    "/useronboarding": {
      "post": {
        "tags": [
          "Useronboarding"
        ],
        "summary": "Create a new Useronboarding",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UseronboardingCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Useronboarding created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Useronboarding"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "Useronboarding"
        ],
        "summary": "Get all Useronboardings",
        "responses": {
          "200": {
            "description": "List of Useronboardings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Useronboarding"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/useronboarding/{id}": {
      "get": {
        "tags": [
          "Useronboarding"
        ],
        "summary": "Get Useronboarding by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Useronboarding ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Useronboarding retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Useronboarding"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Useronboarding not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Useronboarding"
        ],
        "summary": "Update Useronboarding",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Useronboarding ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UseronboardingUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Useronboarding updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Useronboarding"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Useronboarding not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Useronboarding"
        ],
        "summary": "Delete Useronboarding",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Useronboarding ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Useronboarding deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Useronboarding"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Useronboarding not found"
          }
        }
      }
    },
    "/content": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Create a new Content",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Content created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Content"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Get all Contents",
        "responses": {
          "200": {
            "description": "List of Contents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Content"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Get Content by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Content ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Content retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Content"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Content not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Content"
        ],
        "summary": "Update Content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Content ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Content"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Content not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "summary": "Delete Content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Content ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Content deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Content"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Content not found"
          }
        }
      }
    },
    "/socialintegration": {
      "post": {
        "tags": [
          "Socialintegration"
        ],
        "summary": "Create a new Socialintegration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialintegrationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Socialintegration created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Socialintegration"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "Socialintegration"
        ],
        "summary": "Get all Socialintegrations",
        "responses": {
          "200": {
            "description": "List of Socialintegrations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Socialintegration"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/socialintegration/{id}": {
      "get": {
        "tags": [
          "Socialintegration"
        ],
        "summary": "Get Socialintegration by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Socialintegration ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Socialintegration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Socialintegration"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Socialintegration not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Socialintegration"
        ],
        "summary": "Update Socialintegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Socialintegration ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialintegrationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Socialintegration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Socialintegration"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Socialintegration not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Socialintegration"
        ],
        "summary": "Delete Socialintegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Socialintegration ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Socialintegration deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Socialintegration"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Socialintegration not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SocialHandlesItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "platform": {
            "type": "string",
            "description": "platform field"
          },
          "username": {
            "type": "string",
            "description": "username field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id"
        ]
      },
      "Useronboarding": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "userId": {
            "type": "string",
            "description": "userId reference ID"
          },
          "businessType": {
            "type": "string",
            "description": "businessType field"
          },
          "customBusinessType": {
            "type": "string",
            "description": "customBusinessType field"
          },
          "businessDescription": {
            "type": "string",
            "description": "businessDescription field"
          },
          "targetAudience": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of targetAudience items"
          },
          "contentLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contentLanguages items"
          },
          "autoTranslateCaptions": {
            "type": "boolean",
            "description": "autoTranslateCaptions field"
          },
          "socialHandles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialHandlesItem"
            },
            "description": "Array of socialHandles objects"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "deletedAt field"
          }
        },
        "required": [
          "_id",
          "businessType",
          "autoTranslateCaptions"
        ]
      },
      "UseronboardingCreate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "userId reference ID"
          },
          "businessType": {
            "type": "string",
            "description": "businessType field"
          },
          "customBusinessType": {
            "type": "string",
            "description": "customBusinessType field"
          },
          "businessDescription": {
            "type": "string",
            "description": "businessDescription field"
          },
          "targetAudience": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of targetAudience items"
          },
          "contentLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contentLanguages items"
          },
          "autoTranslateCaptions": {
            "type": "boolean",
            "description": "autoTranslateCaptions field"
          },
          "socialHandles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialHandlesItem"
            },
            "description": "Array of socialHandles objects"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "createdAt field"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "updatedAt field"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "deletedAt field"
          }
        },
        "required": [
          "businessType",
          "autoTranslateCaptions"
        ]
      },
      "UseronboardingUpdate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "userId reference ID"
          },
          "businessType": {
            "type": "string",
            "description": "businessType field"
          },
          "customBusinessType": {
            "type": "string",
            "description": "customBusinessType field"
          },
          "businessDescription": {
            "type": "string",
            "description": "businessDescription field"
          },
          "targetAudience": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of targetAudience items"
          },
          "contentLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contentLanguages items"
          },
          "autoTranslateCaptions": {
            "type": "boolean",
            "description": "autoTranslateCaptions field"
          },
          "socialHandles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialHandlesItem"
            },
            "description": "Array of socialHandles objects"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "createdAt field"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "updatedAt field"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "deletedAt field"
          }
        }
      },
      "Content": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "title": {
            "type": "string",
            "description": "title field"
          },
          "description": {
            "type": "string",
            "description": "description field"
          },
          "mediaUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of mediaUrls items"
          },
          "type": {
            "type": "string",
            "description": "type field"
          },
          "scheduledAt": {
            "type": "string",
            "format": "date-time",
            "description": "scheduledAt field"
          },
          "status": {
            "type": "string",
            "description": "status field"
          },
          "user": {
            "type": "string",
            "description": "user reference ID"
          },
          "socialAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of socialAccounts references"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id",
          "title"
        ]
      },
      "ContentCreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "title field"
          },
          "description": {
            "type": "string",
            "description": "description field"
          },
          "mediaUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of mediaUrls items"
          },
          "type": {
            "type": "string",
            "description": "type field"
          },
          "scheduledAt": {
            "type": "string",
            "format": "date-time",
            "description": "scheduledAt field"
          },
          "status": {
            "type": "string",
            "description": "status field"
          },
          "user": {
            "type": "string",
            "description": "user reference ID"
          },
          "socialAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of socialAccounts references"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "createdAt field"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "updatedAt field"
          }
        },
        "required": [
          "title"
        ]
      },
      "ContentUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "title field"
          },
          "description": {
            "type": "string",
            "description": "description field"
          },
          "mediaUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of mediaUrls items"
          },
          "type": {
            "type": "string",
            "description": "type field"
          },
          "scheduledAt": {
            "type": "string",
            "format": "date-time",
            "description": "scheduledAt field"
          },
          "status": {
            "type": "string",
            "description": "status field"
          },
          "user": {
            "type": "string",
            "description": "user reference ID"
          },
          "socialAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of socialAccounts references"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "createdAt field"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "updatedAt field"
          }
        }
      },
      "Socialintegration": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "platform": {
            "type": "string",
            "description": "platform field"
          },
          "accountId": {
            "type": "string",
            "description": "accountId field"
          },
          "accessToken": {
            "type": "string",
            "description": "accessToken field"
          },
          "refreshToken": {
            "type": "string",
            "description": "refreshToken field"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "expiresAt field"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "_id",
          "accountId",
          "accessToken"
        ]
      },
      "SocialintegrationCreate": {
        "type": "object",
        "properties": {
          "platform": {
            "type": "string",
            "description": "platform field"
          },
          "accountId": {
            "type": "string",
            "description": "accountId field"
          },
          "accessToken": {
            "type": "string",
            "description": "accessToken field"
          },
          "refreshToken": {
            "type": "string",
            "description": "refreshToken field"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "expiresAt field"
          }
        },
        "required": [
          "accountId",
          "accessToken"
        ]
      },
      "SocialintegrationUpdate": {
        "type": "object",
        "properties": {
          "platform": {
            "type": "string",
            "description": "platform field"
          },
          "accountId": {
            "type": "string",
            "description": "accountId field"
          },
          "accessToken": {
            "type": "string",
            "description": "accessToken field"
          },
          "refreshToken": {
            "type": "string",
            "description": "refreshToken field"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "expiresAt field"
          }
        }
      }
    }
  }
}